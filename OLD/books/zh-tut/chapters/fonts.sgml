<!--
     The Chinese FreeBSD Documentation Project
     $FreeBSD: doc/zh_TW.Big5/books/zh-tut/chapters/fonts.sgml,v 1.3 2006/06/17 10:22:46 vanilla Exp $
     Original revision: 1.62
-->

<chapter id="fonts">
  <title>輸出字型</title>
  <para>在這個章節中將會介紹點陣字型(Bitmapped Font)，
    以及曲線描邊字型(Outline Fonts)。</para>

  <para>點陣字型(Bitmapped Fonts)：
    這種字型就是直接將點矩陣的字型儲存在記憶體中，
    使用時就直接取出，這種方式若儲存點數不多則輸出字型太難看；
    但若儲存點數較多則需要佔掉太多記憶體，
    同時將字體放大後可能產生鋸齒狀，因此目前除了特殊用途外，
    幾乎很少用到。</para>

  <para>曲線描邊字型(Outline Fonts)：
    是利用曲線公式來描繪字框，因此不論放大縮小位數是多少都一樣平滑，
    但是缺點是計算耗時，常見的包括常用在印刷的 Postscript
    與用在螢幕顯示的 TrueType Font(TTF) 等。</para>

  <para>目前使用點陣字型的主要是控制台軟體，像是 big5con、zhcon 等，
    主要是因為讀取曲線描邊字型的速度較慢，
    也比較複雜，所以目前的控制台軟體都沒看到使用曲線描邊字型的。</para>

  <para>WWW: <ulink url="http://www.geocities.com/fontboard/cjk/index.html">
    Chinese, Japanese and Korean characters in English
    Windows</ulink></para>
  <para>WWW: <ulink url="http://cgm.cs.mcgill.ca/~luc/china.html">
    Chinese Fonts</ulink></para>
      <figure>
        <title>showttf snapshot</title>
        <mediaobject>
          <imageobject>
            <imagedata fileref="images/showttf" format="PNG">
          </imageobject>
        </mediaobject>
      </figure>

  <sect1 id="pcf">
    <title>Bitmapped Font - 點陣字型概論</title>
       <para>點陣字型代表字型 BDF(Bitmap Distribution Format，點陣分散格式)、
          HBF(Hanzi Bitmap Font，漢字點陣字體)、
	  PCF(Portable Compiled Font)。</para>

       <para>BDF Spec:<ulink url="http://partners.adobe.com/asn/developer/pdfs/tn/5005.BDF_Spec.pdf">
          5005.BDF_Spec.pdf</ulink></para>
  </sect1>

    <sect1 id="cmexfonts">
    <title>cmexfonts - 中推會 Big5+ 點陣字型</title>
      <para>該著作權為中華民國行政院研考會、中文電腦推廣基金會所共有，
        字形設計為華康科技 Dynalab Inc.。</para>

      <para>該套字型並不是標準的 Big5 字型，而是當時為了推廣 Big5+ 所製作的，
        目前並無使用的價值。</para>

      <para>安裝 <filename role="package">chinese/cmexfonts</filename>。</para>
      
      <para>這個套件中包含了 16 點、24 點兩套中文點陣字型。</para>
      
      <para>WWW: <ulink url="http://www.cmex.org.tw/">cmex org</ulink></para>
    </sect1>

    <sect1 id="kcfonts">
    <title>kcfonts - 國喬點陣字型</title>
      <para>國喬中文 PCF 字型是 FreeBSD 下最常用的點陣字型。</para>
      
      <para>要得知已安裝的 BIG5 字型的話，可以用：</para>
      <screen>
&prompt.user; <userinput>xlsfonts | grep big5</userinput>
kc15f.pcf.gz -kc-fixed-medium-r-normal--16-160-72-72-c-160-big5-0
kc24f.pcf.gz -kc-fixed-medium-r-normal--24-240-100-100-c-240-big5-0</screen>

      <para>安裝 <filename role="package">chinese/kcfonts</filename>。</para>
      
      <para>這個套件裡面包含了 16 點、20 點以及 24 點三套中文點陣字體，
        足供一般情況顯示中文之用。</para>

      <para>適用於 640x480 解析度 (NoteBook)</para>
      <screen>
&prompt.root; <userinput>rxvt -ls -fm kc15 -fn 8x16 &</userinput></screen>
      <para>適用於 +1024x768 解析度 (17 吋螢幕)</para>
      <screen>
&prompt.root; <userinput>rxvt -ls -fm kc24 -fn 12x24 &</userinput></screen>
    </sect1>

    <sect1 id="gugod-clean">
    <title>gugod-clean - 搭配中文點陣字型用的英文點陣字型</title>
      <para>看了一下 irc 上得聊天，終於懂得是為了終端機的殘影問題。</para>
      
      <para>節錄 gugod 的一段話：</para>
      <para>
	配合 kc15f 改了一下 schumacher 的 clean，本來這兩種字不一樣高，
	所以用久了 term 會髒髒的，改成一樣高就不會了，這個 clean 是 15 的，
	怎麼改成一樣高的？大致上是改 bdf 中的 PIXEL_SIZE, POINT_SIZE,
	FONT_ASCENT, FONT_DESCENT 還有 FONT 這些東東先，不過要先用 
	xmbdfed 把 bdf 字改成想要的長寬，不然 clean 
	字的每個字母長寬都不一樣，很難稿，相關工具請看
	<filename>ports/x11-fonts</filename>。</para>
      <para>安裝 <filename role="package">chinese/gugod-clean</filename>。</para>
      <screen>
&prompt.root; <userinput>cd /usr/X11R6/lib/X11/fonts/local</userinput>
&prompt.root; <userinput>mkfontdir</userinput>
&prompt.root; <userinput>xset fp rehash</userinput> </screen>

      <para>將以下加入 <filename>/usr/X11R6/lib/X11/fonts/local/fonts.alias</filename></para>
      
      <programlisting>
gugod16 -gugod-clean-medium-r-normal--16-160-75-75-c-90-iso8859-1
gugod18 -gugod-clean-medium-r-normal--18-180-75-75-c-80-iso8859-1
gugod20 -gugod-clean-medium-r-normal--20-200-75-75-c-100-iso8859-1
gugod22 -gugod-clean-medium-r-normal--22-220-75-75-c-110-iso8859-1 </programlisting>
      <para>然後執行 <command>Eterm --font gugod16 &</command></para>

      <para>就可以看到很漂亮的 Eterm 透明背景，
	原來會髒掉的終端機也沒問題了。</para>
    </sect1>

    <sect1 id="intlfonts">
    <title>intlfonts - 各國的免費點陣字型</title>
      <para>
        這個包含各國的免費 PCF 字型，而且裡面還包含了 cns11643 七個字面的 
	16pt、24pt 與 40pt，以及 big5 的 taipei16 與 taipei24，
	裝完幾乎可以處理各種語言了。 </para>
      <para>安裝 <filename role="package">x11-fonts/intlfonts</filename>。</para>
    </sect1>

  <sect1 id="PostScript">
    <title>PostScript 概論</title>
      <para> PostScript為美國Adobe(<ulink url="http://www.adobe.com">
        http://www.adobe.com</ulink>)公司於 1985 年所發表的文件描述技術，
        Adobe 並利用這個技術，創造著名合乎 PostScript 技術的字型，
        並從而改變整個印刷工業，PostScript
        可以精確的描述平面繪製任何文字及圖形，現今PostScript
        的技術已經非常普遍的使用在印刷領域，包括螢幕顯示(Display)，
        雷射印表機(Laser Printer)， 輸出機(Imagesetter)，
        數位印刷機(Digital Printing)..等等輸出設備。</para>

      <para>而與 PostScript 技術搭配最重要的是 PostScript 字型，
        使用者可以透過PostScript技術調整某些參數，而改變字型的大小，
        陰影/立體/空心/粗細等特殊效果， 由於 PostScript 在印刷方面卓越表現，
        目前世界上主要的文獻幾乎多是以 PostScript 的形式出現。</para>

      <para>目前常見的中文列印方案都是產生 Postscript 後，
	再進行列印。產生的檔案又可分為內嵌(bg5ps、enscript、cnprint)
	與不內嵌字型(truetype、cid font)，
	目前的解決方案偏向於使用 CID-Keyed font。</para>

      <para>CID-Keyed font，CID是 Character ID 的簡稱。</para>

      <para>CID字型格式的設計主要是為了各種 PostScript 輸出設備，
        ATM(Adobe Type Manager)軟體，
        CPSI(Configurable PostScript Interpreter)解譯器及
        DPS(Display PostScript)顯示型 PostScript 軟體等，
        能使用於大字庫字體集，特別是台灣、大陸、日本、韓國
        等雙位元語系的國家文字。 </para>

      <para>CJK(Chinese, Japan, Korean)字集上日、韓二國文字，
        除了平假名、片假名及韓文字外，佔最多字體容量的還是漢字部份，
        而且中、日、韓的漢字很多都是相同的漢字，如果一套 CJK 字集能包括
        Big5、GB、JIS 及 KSC 碼的所有的字型、
        容量一定比四種碼位分開的字型少 30% 以上，而且可以不用擔心，
        以後從以上四個地區來的文件，輸出時沒有對應的字型輸出。</para>

      <para> 在1990年 Adobe 發表可以支援雙位元架構的 PostScript 字型格式，
        一般我們通稱為 OCF(Original Composite Font)格式，
        它使用比較複雜的字型構造及儲存方式，
        因為它為了要支援雙位元的字型，就必須要做成這樣複雜的架構，
        像目前大家所使用的中文 Type1、Type3、Type4 等字型格式，
        都是屬於 OCF 格式。</para>

      <para> OCF 字型要抓取列印一個雙位元字型時，必須要經過複雜的對應關係，
        才能取得字型的外框資料去列印，所以 Type1、Type3、Type4 等 OCF
        字型的檔頭(header)描述都非常複雜，
        而且每一家字型廠商都不太一樣。</para>

      <para>CID 字型的架構比 OCF 字型就簡單多了，
        直接由 CMap 檔案去對應字型外框資料，
        所以解譯器能快速的取得及解譯字型的外框資料及列印，
        而且比較節省記憶體的使用。</para>

      <para>Character Collection(字型集)及 CMap File(對應檔)這二者 Adobe
        都有定義標準格式，字型廠商可以使用 Adobe 的標準格式，
        以繁體中文為例，Adobe定義一個 Character Collection，
        和很多個的 CMap File，如 Adobe-CNS1-0，B5-H，B5pc-H，ETen-B5-H
        等不同的 CMap file。 不同的 CMap file 使用於不同的內碼系統，
        如果這些內碼系統的字碼有擴充時，只要增加新的 CMap file 及 CID
        字型即可，可以不影響到原來的 CMap file 及 CID 字型檔。 </para>
      <para>WWW: <ulink url="http://www.arphic.com.tw/faqs/faqs_cid.htm">
        cid faqs at arphic</ulink></para>
      <para>WWW: <ulink url="http://partners.adobe.com/asn/tech/type/index.jsp">
        Fonts / Type / OpenType</ulink></para>
  </sect1>

    <sect1 id="truetype-as-cidfonts">
    <title>使用 TrueType 字型當作是 CID fonts</title>
      <para>gs-cjk 是一個讓 Aladdin/Artifex/GNU ghostscript(gs)
        能夠使用 CJK 功能的發展計畫。在這個網站中，所提供的程式集，
        包含讓 gs 能夠把 CJK ( 繁、簡中文，日文，韓文 )
        的 TrueType 字型當作 CID-Keyed 的字型來處理的必要修補檔案( patch)，
        以及改進在 gs CID-Keyed 字型的handler。</para>

      <para>該計畫已經整合到 <application>ghostscript7</application></para>

      <para>CID-Keyed font 由 CID font 和 CMap 所組成，
        使用前記得安裝 <filename role="package">print/adobe-cmap</filename>
	。</para>
      <para>使用 ghostscript 來列印文件：</para>
      <screen>
&prompt.root; <userinput>gs -sDEVICE=cdj550 -sOutputFile=/dev/lpt0 xx.ps</userinput>
      </screen>
      <para><command>gs --help</command> 會有更多的選項</para>
      <para>以此套件搭配 arphicttf 就可以讓大部分的軟體可以透過
        gs 讀取 ttf 來產生正確的 gs 檔。</para>
      <para>以下是利用 <filename role="package">chinese/ttfm</filename> 來將 <application>arphicttf</application> 的字型加入 gs-cjk 的列表：</para>
      <screen>
&prompt.root; <userinput>ttfm.sh --add gs-cjk bkai00mp.ttf</userinput>
&prompt.root; <userinput>ttfm.sh --add gs-cjk bsmi00lp.ttf</userinput></screen>

      <para>這樣會分別產生常用的 CID-Keyed：ShanHeiSun-Light-Eten-B5-H 以及
	ZenKai-Medium-Eten-B5-H 以供需要列印的軟體使用，例如
	Mozilla、KDE等。</para>

      <para>WWW: <ulink url="http://www.cs.wisc.edu/~ghost/index.html">
	Ghostscript, Ghostview and GSview</ulink></para>

      <para>WWW: <ulink url="http://www.gyve.org/gs-cjk/">
        gs-cjk project</ulink></para>
    </sect1>

    <sect1 id="moefonts-cid">
    <title>moefonts-cid - 由 Adobe 轉譯的 MOE CID Font</title>
      <para>CID-Keyed font 由 CID font 和 CMap 所組成，
	CMap 可以透過安裝
	<filename role="package">print/adobe-cmaps</filename> 來達成，
	而 CID font 則必須另外安裝。
	中文 CID font(MOEKai 和 MOESung) 是從教育部而來的，
	原本為 48x48 點陣字型，由 Adobe 製作成 CID font。</para>
      <para>安裝 <filename role="package">chinese/moefonts-cid</filename>。</para>
      <para>自行安裝的話，CID-Keyed font 可以從 
	<ulink url="ftp://ftp.oreilly.com/pub/examples/nutshell/cjkv/adobe/samples/">
        ftp://ftp.oreilly.com/pub/examples/nutshell/cjkv/adobe/samples/</ulink> 
	取得 MOEKai-Regular MOESung-Regular 這兩個 CIDFont，並在
	<ulink url="ftp://ftp.oreilly.com/pub/examples/nutshell/cjkv/adobe/">
	ftp://ftp.oreilly.com/pub/examples/nutshell/cjkv/adobe/</ulink>
	取得 ac14.tar.Z，裡面包含了 Adobe-CNS1 的 CMap 檔案。</para>
      <para>裝完後就有如下的 CID-Keyed font 可以使用：</para>
      <programlisting>
MOEKai-Regular-ETen-B5-H
MOEKai-Regular-ETen-B5-V
MOESung-Regular-ETen-B5-H
MOESung-Regular-ETen-B5-V</programlisting>
      <para>以下是一個測試的範例：</para>
      <screen>
&prompt.user; <userinput>cat cid.ps</userinput>
/MOEKai-Regular-ETen-B5-H findfont 60 scalefont setfont
50 600 moveto (眾裡尋他千百度) show                          
50 520 moveto (驀然回首) show      
50 440 moveto (那人卻在燈火欄珊處) show
showpage                               
quit
&prompt.user; <userinput>gv -antialias cid.ps</userinput>
&prompt.user; <userinput>ps2ps cid.ps cid2.ps</userinput>
&prompt.user; <userinput>ps2pdf cid.ps</userinput>
&prompt.user; <userinput>ps2pdf cid2.ps</userinput>
&prompt.user; <userinput>xpdf cid.pdf</userinput> (可能不行)
&prompt.user; <userinput>xpdf cid2.pdf</userinput></screen>
      <figure>
        <title>cid-gv snapshot</title>
        <mediaobject>
          <imageobject>
            <imagedata fileref="images/cid-gv" format="PNG">
          </imageobject>
        </mediaobject>
      </figure>
      <para>目前已經可以由 <filename role="package">chinese/ttfm</filename> 搭配 
        <application>gs-cjk</application>
	的方式來取代，而且效果更好。</para>
      <para>以下是以 MOESung-Regular 為例子，來增加粗體、斜體、粗斜體支援，
        在安裝時，由於必須額外安裝 adobe-cmaps 來搭配，
	所以會 DEPENDS print/adobe-cmaps。</para>
      <para>再來是建立粗體，斜體，粗斜體等，在看完 ttfm 的 gs-cjk 模組後，
	有個想法就是 gs-cjk 的做法是在 ttf 上面建立粗體，斜體，粗斜體等，
	這些做法是不是應該也適用於 moefonts-cid？</para>
      <para>因此就建立了 MOESung-Regular-Bold</para>
      <programlisting>
%!PS-Adobe-3.0 Resource-CIDFont
%%BeginResource: CIDFont (MOESung-Regular-Bold)
/MOESung-Regular-Bold
/MOESung-Regular /CIDFont findresource
16 dict begin
  /basecidfont exch def
  /basefont-H /.basefont-H /Identity-H [ basecidfont ] composefont def
  /basefont-V /.basefont-V /Identity-V [ basecidfont ] composefont def
  /CIDFontName dup basecidfont exch get def
  /CIDFontType 1 def
  /CIDSystemInfo dup basecidfont exch get def
  /FontInfo dup basecidfont exch get def
  /FontMatrix [ 1 0 0 1 0 0 ] def
  /FontBBox [
    basecidfont /FontBBox get cvx exec
    4 2 roll basecidfont /FontMatrix get transform
    4 2 roll basecidfont /FontMatrix get transform
  ] def
  /cid 2 string def
  /BuildGlyph {
    gsave
    exch begin
      dup 256 idiv cid exch 0 exch put
      256 mod cid exch 1 exch put
      rootfont /WMode known { rootfont /WMode get 1 eq } { false } ifelse
      { basefont-V } { basefont-H } ifelse setfont
      .03 setlinewidth 1 setlinejoin
      newpath
      0 0 moveto cid false charpath stroke
      0 0 moveto cid show
      currentpoint setcharwidth
    end
    grestore
  } bind def
  currentdict
end
/CIDFont defineresource pop
%%EndResource
%%EOF</programlisting>
      <para>以及 MOESung-Regular-Bold-ETen-B5-H.gsf</para>
      <programlisting>
/MOESung-Regular-Bold-ETen-B5-H
/MOESung-Regular-Bold (MOESung-Regular-Bold)
/ETen-B5-H (CMap/ETen-B5-H)

1 index /CMap resourcestatus
{pop pop pop}
{runlibfile} ifelse
/CMap findresource

3 1 roll
1 index /CIDFont resourcestatus
{pop pop pop}
{runlibfile} ifelse
/CIDFont findresource

[ exch ] composefont pop </programlisting>
      <para>結果發現在測試檔 cid.ps</para>
      <programlisting>
/MOESung-Regular-ETen-B5-H findfont 30 scalefont setfont
50 600 moveto (2000年5月29日) show
/MOESung-Regular-Bold-ETen-B5-H findfont 30 scalefont setfont
50 560 moveto (2000年5月29日) show
/MOESung-Regular-Italic-ETen-B5-H findfont 30 scalefont setfont
50 520 moveto (2000年5月29日) show
/MOESung-Regular-BoldItalic-ETen-B5-H findfont 30 scalefont setfont
50 480 moveto (2000年5月29日) show
/MOEKai-Regular-ETen-B5-H findfont 30 scalefont setfont
50 440 moveto (2000年5月29日) show
/MOEKai-Regular-Bold-ETen-B5-H findfont 30 scalefont setfont
50 400 moveto (2000年5月29日) show
/MOEKai-Regular-Italic-ETen-B5-H findfont 30 scalefont setfont
50 360 moveto (2000年5月29日) show
/MOEKai-Regular-BoldItalic-ETen-B5-H findfont 30 scalefont setfont
50 320 moveto (2000年5月29日) show
showpage
quit</programlisting>
      <para>粗體的部分出現了預期的效果，所以就繼續製作斜體與粗斜體，
        這部分可以參考 gs-cjk，斜體的名稱定為 MOESung-Regular-Italic，
	而粗斜體則是 MOESung-Regular-BoldItalic。</para>
      <para>最後，記得把這些 .gsf 寫入
	/usr/local/share/ghostscript/7.05/lib/Fontmap.GS
	寫法是：字型 (字型.gsf) ;</para>
      <programlisting>
/MOESung-Regular-ETen-B5-H (MOESung-Regular-ETen-B5-H.gsf) ;
/MOESung-Regular-Bold-ETen-B5-H (MOESung-Regular-Bold-ETen-B5-H.gsf) ;
/MOESung-Regular-BoldItalic-ETen-B5-H (MOESung-Regular-BoldItalic-ETen-B5-H.gsf) ;
/MOESung-Regular-Italic-ETen-B5-H (MOESung-Regular-Italic-ETen-B5-H.gsf) ;</programlisting>
      <para>最後修改一下 -H 成 -V 再重複上面的過程即可，
	其他的字型也是幾乎一樣的做法就可以完工了，
	不過，真的比不上用 ttf 做出來的呀</para>
      <para>如此建立完，就會有一堆可用的 CID-Keyed 字型</para>
      <programlisting>
MOESung-Regular-ETen-B5-H
MOESung-Regular-Bold-ETen-B5-H
MOESung-Regular-BoldItalic-ETen-B5-H
MOESung-Regular-Italic-ETen-B5-H</programlisting>
      <para>這樣子在配合文書軟體上，應該會更好，
        我想文書軟體慢慢的也會把列印的部分用
	gs 所提供的字型來模擬，像是 editors/Abiword 就是個很棒的例子，
	而 kde2 則是自己做粗體，斜體等的模擬，
	不過我還沒去測試到粗體和斜體的部分，
	等有空閒了再去試試。</para>
      <figure>
        <title>moefonts-cid snapshot</title>
        <mediaobject>
          <imageobject>
            <imagedata fileref="images/moefonts-cid" format="PNG">
          </imageobject>
        </mediaobject>
      </figure>
    </sect1>

    <sect1 id="embbed-pdf">
      <title>以 gs 觀看不內嵌的 pdf 檔</title>
      <para>gs/gv 有個 dirty hack，就是看到</para>
      <programlisting>
name                                 type         emb sub uni object ID
------------------------------------ ------------ --- --- --- ---------
國字標準宋體                         CID TrueType no  no  no      22  0</programlisting>
      <para>這種類型的不內嵌字，就自己到 
      <filename>/usr/local/share/ghostscript/7.05/lib/CIDFnmap</filename>
      中加上 alias，以我而言會加上文鼎上海宋的 alias：</para>
      <programlisting>
/國字標準宋體           /ShanHeiSun-Light       ;</programlisting>
      <para>李果正 Edward G.J. Lee 也提出比較正式的解法如下：</para>
      <para>
        昨天玩了一下 gs。發現可能不必這麼麻煩，因為 CJK-latex + dvipdfmix
	製作出來的不內嵌中文 PDF 檔，頗合 PDF-spec。雖然，pdffonts 看到的是：</para>
      <programlisting>
name                                 type         emb sub uni object ID
------------------------------------ ------------ --- --- --- ---------
國字標準宋體                         CID TrueType no  no  no      22  0</programlisting>
      <para>但其實 PDF 檔裡頭會標記成 Adobe-CNS1，也就是說會去使用 PDF browser
	Adobe-CNS1 的預設字型，例如：</para>
      <programlisting>
34 0 obj
&lt;&lt;
/Type/Font
/Subtype/CIDFontType2
/BaseFont/#b0#ea#a6r#bc#d0#b7#c7#a7#ba#c5#e9,Italic
/FontDescriptor 35 0 R
/CIDSystemInfo&lt;&lt;
/Registry(Adobe)
/Ordering(CNS1)
/Supplement 0
&gt;&gt;
&gt;&gt;
endobj</programlisting>
      <para>以此 object 為例。其中 # 是代表 hex notation，
        那一堆就是『國字標準宋體』，
	後面會有 /Registry(Adobe) /Ordering(CNS1)，因此，只要 gs 的
	CIDFnmap 設成：</para>
      <programlisting>
/Adobe-CNS1             /ShanHeiSun-Light       ;</programlisting>
      <para>就可以了，也就是說，不管 PDF 使用什麼字型，如果找不到此字型，
        就會使用預設的 (Adobe-CNS1)ShanHeiSun-Light。
	這樣就不必遇到沒有的字型就得去加入 alias。
	而 acroread 也會去找他的預設字型 MHei-Medium 或 MSung-Light
	(視 acroread 如何設定，設成 sans 則取用黑體，設成 serif
        則取用宋體)。為防意外，建議以下兩行也加入：</para>
      <programlisting>
/Adobe-CNS1-Big5        /ShanHeiSun-Light       ;
/Adobe-CNS1-Unicode     /ShanHeiSun-Light       ;</programlisting>
      <para>這樣一來，列印的問題也解決了。pdf2ps(pswrite device) 時 gs 會去取用
        ShanHeiSun-Light。當然，前提是 /usr/share/ghostscript/Resource 要把
        ShanHeiSun-Light 預先設定好。</para>
    </sect1>

  <sect1 id="truetype">
    <title>TrueType - 全真字型概論</title>
      <para>TrueType字型格式為美國Apple (<ulink url="http://www.apple.com">
        http://www.apple.com</ulink>)及Microsoft (
        <ulink url="http://www.microsoft.com">http://www.microsoft.com</ulink>
        )所共同制定，最先使用於Apple的Macintosh系列及
        Microsoft Windows 3.1， 而目前Apple的OS 8.0及
        Microsoft Windows 95/NT/2000/XP也都使用
        TrueType作為字型格式。</para>
      <para>基本上TrueType和PostScript一樣，都是使用貝茲曲線(Bezier Curve)
        來描述的外框字。 字型可以作任意尺寸的放大縮小，
        或作其他屬性的變化，不過由於Apple及Microsoft
        的作業系統都直接支援此字型格式，所以並不需要如PostScript
        一樣，外掛(Adobe)Type Manager之類的程式。 </para>
      <para>WWW: <ulink url="http://www.microsoft.com/typography/users.htm">
        Features of TrueType and OpenType</ulink></para>
  </sect1>

    <sect1 id="ttfm">
    <title>ttfm - TrueType 字型管理工具</title>
      <para>目前有許多程式都會要求使用 TTF 字型，所以我們最好還是幫 X 加
        上中文的 TTF 字型支援。目前安裝字型所需的
        <filename>fonts.dir</filename> 已經不需要
        使用暴力的方法產生，使用 <filename role="package">chinese/ttfm</filename>
        就可以很順利的管理所有的中文字
        型了。而現在在 ports 中的 TrueType 字型有七套，
        <application>CJKUnifonts</application>、
        <application>arphicttf</application>、
        <application>dfsongsd</application>、
        <application>fireflyttf</application>、
        <application>mingunittf</application>、
        <application>moettf</application>、
        <application>wqy</application>。</para>
      <para>安裝 <filename role="package">chinese/ttfm</filename>。</para>
      <para>安裝後包含了：</para>
      <para><command>ttfinfo：</command>一個可以用來讀取 ttf 
        字型格式資訊的小程式，範例如下：</para>
      <screen>
&prompt.root; <userinput>ttfinfo /usr/local/share/fonts/TrueType/bkai00mp.ttf</userinput>
TTFINFO_FONT_FILE="/usr/local/share/fonts/TrueType/bkai00mp.ttf"
TTFINFO_FONT_NAME="AR PL KaitiM Big5"
TTFINFO_FONT_PSNAME="ZenKai-Medium"
TTFINFO_FOUNDRY_NAME="Arphic"
TTFINFO_WEIGHT_NAME="medium"
TTFINFO_WIDTH="normal"
TTFINFO_NUMCMAP="2"
TTFINFO_CMAP0="1,0"
TTFINFO_CMAPNAME0="Apple,Roman"
TTFINFO_CMAP1="3,1"
TTFINFO_CMAPNAME1="Windows,Unicode"
TTFINFO_MAPNUM="1"
TTFINFO_FONTMAP1="-Arphic-AR PL KaitiM Big5-medium-r-normal--0-0-0-0-c-0-big5-0"</screen>
      <para><command>ttfinst.tk</command>：圖形介面的 tk script，
        可以用來安裝字型，不建議使用。</para>
      <para><command>ttfm.sh</command>：shell script，預備作為 ttf 字型總管。</para>
      <screen>
&prompt.root; <userinput>ttfm.sh --help</userinput>
True-Type Font Manager 0.9.3

Usage: /usr/local/bin/ttfm.sh [option]

       --add [module] &lt;file&gt;...    install ttf font
       --remove [module] &lt;file&gt;... remove ttf font from the system
       --list &lt;module&gt;... list all ttf fonts on the system
       --modules          list all ttf manager modules on the system
       --initm &lt;module&gt;.. initialize modules
       --help             show this info</screen>
      <para>這個程式會去利用位於 
        <filename>/usr/share/fonts/install/</filename> 底下以
        <filename>".ttfm"</filename> 結尾的可執行檔來安裝、設定字型，
        這些 <filename>.ttfm</filename> 檔案我稱
        為 ttfm module，由需要使用到 ttf 字型的程式提供，這些模組必
        須符合以下要求：</para>
      <itemizedlist>
        <listitem><para>
          可獨立使用，不一定透過 <command>ttfm.sh</command> 呼叫執行。
        </para></listitem>
        <listitem><para>
          不對系統字型目錄有任何預設，只管理自己模組字型目錄下的檔案。
        </para></listitem>
        <listitem><para>
          對 ttf 檔案位置需求不同於 <command>ttfm.sh</command> 
          中的系統字型目錄時，以
          link 方式處理，不 copy ttf 檔案，移除字型時不更動系統字型目
          錄中的檔案。
        </para></listitem>
        <listitem><para>
          提供至少下面幾個參數供 <command>ttfm.sh</command> 使用：</para>
          <programlisting>
    --name         顯示模組名稱
    --list         列出模組管理的現有字型與對應的名稱
    --add &lt;file&gt;   增加字型，file 為一字型檔案名稱，如
                   /mnt/windows/fonts/mingliu.ttc
    --remove &lt;file&gt;    移除字型，file 為字型檔案名稱，可以是
                   fullpath、亦可以是單純檔案名，如
                   /usr/local/share/fonts/TrueType/bkai00mp.ttf or bkai00mp.ttf
          </programlisting>
        </listitem>
      </itemizedlist>
      <para><filename role="package">chinese/ttfm</filename> 採用模組化的設計。
        每一個需要使用到 ttf 字型的
        程式都可以提供 <filename role="package">chinese/ttfm</filename> 的模組，
        然後便可透過 <command>ttfm.sh</command> 來做到
        字型的安裝，移除，列表，設定預設字型等管理的動作。
        目前已有的 <filename role="package">chinese/ttfm</filename> 模組有：</para>
      <programlisting>
abiword		給 AbiWord 0.7.12 或是以上的版本使用。
chitex		安裝 ChiTeX 字型  (by cwhuang)
gscjk    	給 Aladdin Ghostscript 使用。可以管理 TrueType 字型
		和 CID 字型，Ghostscript 必須修補可以使用 TrueType 字型。
ttf2pk		供 freetype-contrib 的 ttf2tfm, ttf2pk 使用  (by cwhuang)
xfreetype	給 XFree86's freetype backend，在 3.x 是 Xfsft，
		在 4.x 是 freetype 模組。
xttfm-tcl	給 XFree86 3.3.x X-TrueType server。
xttfm		安裝給 X window 用的 font.dir, font.alias  (by 小虫)</programlisting>
      <para>一些使用範例：</para>
      <para>1. 加入字型：</para>
      <screen>
&prompt.root; <userinput>ttfm.sh --add &lt;path&gt;/bsmi00lp.ttf</userinput></screen>
      <para>(xttfm 會令 xfs 重新載入字型名稱。如果您不是使用 xfs，
        您要自己下 <command>xset fp rehash</command> 
        令新的字型名稱生效，或者重新啟動 X Window )</para>
      <para>2. 列出字型：</para>
      <screen>
&prompt.root; <userinput>ttfm.sh --list xttfm</userinput></screen>
      <para>會列出 xttfm 模組所有安裝的字型。
        您現在可以用 <command>xlsfonts</command> 看到這些字型名稱。
        並可用 <command>xfd -fn &lt;字型名稱&gt;</command> 
        試試能否看到字型。</para>
      <para>3. 移除字型：</para>
      <screen>
&prompt.root; <userinput>ttfm.sh --remove bsmi00lp.ttf</userinput></screen>
      <para>這不需多做解釋吧？</para>
      <para>4. 設定預設字型：</para>
      <screen>
&prompt.root; <userinput>ttfm.sh --setdefault xttfm bkai00mp.ttf</userinput></screen>
      <para>將 xttfm 模組的預設字型更改為 
        bkai00mp.ttf 這或許是 <filename role="package">chinese/ttfm</filename> 
        最 powerful 的功能之一了。
        您可發現 X Window 預設的中文字型通通變成楷體的。</para>
      <para>注意預設字型是跟 encoding 有關的。您可以對不同的
        encoding 分別給定預設字型。<filename role="package">chinese/ttfm</filename>
        會自動根據所給定
        ttf 自動判斷應設定那種 encoding 的預設字型。
        例如 <command>ttfm.sh --setdefault xttfm gkai00mp.ttf</command>
        會設定 GB 的預設字型為楷體。 </para>
      <para>5. 模組的初始化：</para>
      <screen>
&prompt.root; <userinput>ttfm.sh --initm &lt;module name&gt;...</userinput></screen>
      <para>這個功能是用來在安裝一模組時，將系統已有的
        ttf 字型通通安裝到該模組中。
        如果下: </para>
      <screen>
&prompt.root; <userinput>ttfm.sh --initm all</userinput></screen>
      <para>會令所有已安裝的模組都做初始化的動作。
       (也就是將所有字型安裝到所有的模組中) </para>
      <para>如果您撰寫了一個 ttfm 的模組，請記得在安裝時
        執行 <command>ttfm.sh --initm &lt;您的模組名稱&gt;</command></para>
      <note><para>關於 TrueType 字型的設定，在啟動您的 X 之前，
        記得檢查 <filename>/etc/XFree86</filename> 下面有沒有 
	<option>FontPath   "/usr/X11R6/lib/X11/fonts/TrueType"</option> 
	或是在 <filename>~/.xinitrc</filename> 中加上 
	<option>xset +fp /usr/X11R6/lib/X11/fonts/TrueType/ </option>。</note>
      <screen>
&prompt.root; <userinput>cvs -d :pserver:anonymous@cle.linux.org.tw:/var/lib/CVSROOT login</userinput>
(Logging in to anonymous@cle.linux.org.tw)
CVS password: <userinput></userinput>
&prompt.root; <userinput>cvs -d :pserver:anonymous@cle.linux.org.tw:/var/lib/CVSROOT checkout ttfm</userinput> </screen>
      <para>WWW: <ulink url="http://cle.linux.org.tw/cgi-bin/cvsweb.cgi/ttfm/">
	ttfm project</ulink></para>
    </sect1>

    <sect1 id="mingliu">
    <title>mingliu - 微軟細明體 TrueType 字型</title>
      <para>Contributed by EricCheng</para>
      <para>Last Update: 2003年 9月21日 周日 21時13分54秒 CST</para>
      <para>mingliu 是微軟向華康購買的中文繁體字型，
        也是 Windows 使用者最習慣的電腦字。</para>
      <screen>
&prompt.root; <userinput>cd /usr/ports/outta-port/mingliu</userinput>
&prompt.root; <userinput>make install clean</userinput></screen>
      <para>mingliu.ttc 有兩個 faces，第零個 face 是 
        細明體(MingLiU)，英文字型是等寬的， 
	第一個是新細明體(PMingLiU)，不等寬的英文字型，
	預設會使用第零個，如果要使用新細明體的話，必須另外設定。</para>
      <para>細明體在 11, 12, 13, 15, 16, 20 點的大小有特別做內嵌的點陣字，
        換句話說，由於中文字的 hinting 不易，有時點陣字會比較有效。
	又因為新細明體使用了 bytecode 來組合筆劃，
	沒有編進 bytecode interpreter 的 freetype 版本在 render 的時候，
	就會碎掉。
	在目前 ports/print/freetype2 中，預設會利用
	files/patch-include::freetype::config::ftoption.h 將
	TT_CONFIG_OPTION_BYTECODE_INTERPRETER 打開。</para>
      <para>設定讓細明體在這些大小時，顯示內建的點陣字而不要用 anti-aliased，
        在 ~/.fonts.conf 加入：</para>
      <programlisting>
    &lt;match target="font"&gt;
        &lt;test name="family"&gt;&lt;string&gt;MingLiU&lt;/string&gt;&lt;/test&gt;
        &lt;edit name="antialias"&gt;&lt;bool&gt;true&lt;/bool&gt;&lt;/edit&gt;
        &lt;edit name="hinting"&gt;&lt;bool&gt;true&lt;/bool&gt;&lt;/edit&gt;
        &lt;edit name="autohint"&gt;&lt;bool&gt;false&lt;/bool&gt;&lt;/edit&gt;
    &lt;/match&gt;
    &lt;match target="font"&gt;
        &lt;test name="family"&gt;&lt;string&gt;MingLiU&lt;/string&gt;&lt;/test&gt;
        &lt;test name="size" compare="less_eq"&gt;&lt;int&gt;12&lt;/int&gt;&lt;/test&gt;
        &lt;edit name="antialias" mode="assign"&gt;&lt;bool&gt;false&lt;/bool&gt;&lt;/edit&gt;
        &lt;edit name="hinting" mode="assign"&gt;&lt;bool&gt;true&lt;/bool&gt;&lt;/edit&gt;
    &lt;/match&gt;</programlisting>
      <para>因為 MingLiU 宣稱自己是 monospaced 字型，
        但實際上它有兩種固定寬度：中文的全形以及英文的半形，
	造成 freetype 誤判所有字都是跟中文的全形一樣寬，
	使得英文字和中文字會等寬。</para>
      <para>可以修改 freetype 的 globaladvance flag 或是 spacing，
        0 是 proportional 的 spacing，100 是 mono，110 是 charcell：</para>
      <programlisting>
    &lt;match target="font"&gt;
        &lt;test name="family"&gt;&lt;string&gt;MingLiU&lt;/string&gt;&lt;/test&gt;
        &lt;edit name="globaladvance"&gt;&lt;bool&gt;false&lt;/bool&gt;&lt;/edit&gt;
    &lt;/match&gt;
    &lt;match target="font"&gt;
        &lt;test name="family"&gt;&lt;string&gt;MingLiU&lt;/string&gt;&lt;/test&gt;
        &lt;edit name="spacing"&gt;&lt;int&gt;0&lt;/int&gt;&lt;/edit&gt;
    &lt;/match&gt;</programlisting>
      <note><para>記得在 ~/.fonts.conf 的頭尾加上</para>
        <programlisting>
&lt;?xml version="1.0"?&gt;
&lt;!DOCTYPE fontconfig SYSTEM "fonts.dtd"&gt;
&lt;fontconfig&gt;
...
&lt;/fontconfig&gt;</programlisting></note>
      <para>在 X11 Core Font 上，則是利用 xtt 的功能來選取 Face 1 的
        PMingLiU 來顯示，也就是在最前面加上 fn=1，並檢查
	Spacing 欄位是否為 p，MingLiU 的 Spacing 欄位是 m。
	如果安裝 <filename role="package">chinese/ttfm</filename> 會自動加入兩個 face。</para>
      <programlisting>
mingliu.ttc -DynaLab-MingLiU-medium-r-normal--0-0-0-0-m-0-iso8859-1
fn=1:mingliu.ttc -DynaLab-PMingLiU-medium-r-normal--0-0-0-0-p-0-iso8859-1</programlisting>
      <para>WWW: <ulink url="  http://fractal.csie.org/~eric/wiki/wiki.phtml?title=Fontconfig">
        EricCheng Fontconfig</ulink></para>
    </sect1>

    <sect1 id="simsun">
    <title>simsun - 微軟宋體 TrueType 字型</title>
      <para>simsun 是微軟向 ZHONGYI Electronic Co. 購買的中文簡體字型，
        也是 Windows 使用者最習慣的電腦字。</para>
      <screen>
&prompt.root; <userinput>cd /usr/ports/outta-port/simsun</userinput>
&prompt.root; <userinput>make install clean</userinput></screen>
      <para>simsun.ttc 有兩個 faces，第零個 face 是 
        SimSun，英文字型是不等寬的， 
	第一個是NSimSun，等寬的英文字型，
	預設會使用第零個，如果要使用NSimSun的話，必須另外設定。</para>
      <para>因為 NSimSun 宣稱自己是 monospaced 字型，
        但實際上它有兩種固定寬度：中文的全形以及英文的半形，
	造成 freetype 誤判所有字都是跟中文的全形一樣寬，
	使得英文字和中文字會等寬。</para>
      <para>可以修改 freetype 的 globaladvance flag 或是 spacing，
        0 是 proportional 的 spacing，100 是 mono，110 是 charcell：</para>
      <programlisting>
    &lt;match target="font"&gt;
        &lt;test name="family"&gt;&lt;string&gt;NSimSun&lt;/string&gt;&lt;/test&gt;
        &lt;edit name="globaladvance"&gt;&lt;bool&gt;false&lt;/bool&gt;&lt;/edit&gt;
    &lt;/match&gt;
    &lt;match target="font"&gt;
        &lt;test name="family"&gt;&lt;string&gt;NSimSun&lt;/string&gt;&lt;/test&gt;
        &lt;edit name="spacing"&gt;&lt;int&gt;0&lt;/int&gt;&lt;/edit&gt;
    &lt;/match&gt;</programlisting>
      <note><para>記得在 ~/.fonts.conf 的頭尾加上</para>
        <programlisting>
&lt;?xml version="1.0"?&gt;
&lt;!DOCTYPE fontconfig SYSTEM "fonts.dtd"&gt;
&lt;fontconfig&gt;
...
&lt;/fontconfig&gt;</programlisting></note>
      <para>若要使用等寬的 NSimSun，在 X11 Core Font 上，
        則是 xtt 的功能來選取 Face 1 的
        NSimSun 來顯示，也就是在最前面加上 fn=1，並檢查
	Spacing 欄位是否為 m，SimSun 的 Spacing 欄位是 p。
	如果安裝 <filename role="package">chinese/ttfm</filename> 會自動加入兩個 face。</para>
      <programlisting>
simsun.ttc -misc-SimSun-medium-r-normal--0-0-0-0-p-0-iso8859-1
fn=1:simsun.ttc -misc-NSimSun-medium-r-normal--0-0-0-0-m-0-iso8859-1</programlisting>
    </sect1>

    <sect1 id="minguni">
    <title>mingunittf - 香港補增字符集2001</title>
      <para>mingunittf 包含了香港補增字符集2001的所有字。</para>
      <para>mingunittf 的安裝:</para>
      <screen>
&prompt.root; <userinput>cd /usr/ports/chinese/mingunittf</userinput>
&prompt.root; <userinput>make install clean</userinput></screen>
      <para>由於搭配 ttfm 的 xttfm 模組，因此在 <filename>/etc/X11/xorg.conf</filename>
        裡面一定要 <option>Load "xtt"</option> 才行。</para>
    </sect1>

   <sect1 id="CJKUnifonts">
   <title>CJKUnifonts - 中日韓 TrueType 字型</title>
     <para>CJKUnifonts 為原來的 arnettf，由 Arne Goetje
     根據文鼎字型修改而成，其中包含了 Big5，GB2312-80，
     HKSCS-2004，ISO8859-1,2,3,4,7,9,10,13,14,15
     及台灣方音符號(設計給台式閩南語及台式客語輸入法的符號)。
     CJKUnifonts 包含了明體(uming.ttf)及楷體(ukai.ttf)</para>
     <para>CJKUnifonts 的安裝：</para>
     <screen>
     &prompt.root; <userinput>cd /usr/ports/chinese/CJKUnifonts</userinput>
     &prompt.root; <userinput>make install clean</userinput></screen>
     <para>另外，本字型尚缺部份的日、韓文等字將會在每次的釋出版本中增加。</para>
     <para>WWW: <ulink url="http://www.freedesktop.org/wiki/Software_2fCJKUnifonts">
     http://www.freedesktop.org/wiki/Software_2fCJKUnifonts</ulink> </para>


   </sect1>

    <sect1 id="moettf">
    <title>moettf - 台灣教育部標準 TrueType 字型</title>
      <para><application>moettf</application> 台灣教育部標準楷書、宋體 
        ttf 字型檔，現在又加了兩個字型 
        <filename>moe_sungext.ttf</filename> 和 
        <filename>moe_sungsym.ttf</filename>，雖然字型是 BIG5 編碼，
        字元和符號在 CNS 中還是偶而會用到。</para>

      <para>安裝 <filename role="package">chinese/moettf</filename>。</para>
      
      <para>以下按照年代說明</para>
      <programlisting>
85.12.03    國字標準字體楷書母稿
85.12.03    國字標準字體宋體母稿
85.12.05    國字方體母稿</programlisting>

      <para>這時 Wukai 從教育部的標準字體轉成兩個 ttf，
        <ulink url="http://bbs.ee.ntu.edu.tw/boards/Linux/7/8/4.html">
        http://bbs.ee.ntu.edu.tw/boards/Linux/7/8/4.html</ulink>
        ，也就是第一版的 moe_kai.ttf 與 moe_sung.ttf，
	moe_sung 的字數是 13865，moe_kai 的字數是 13849 少了幾個特別複雜的字，
	這是教育部原始提供的字面母稿的少了的，不是轉換過程中 lost 掉的。</para>
      <programlisting>
87.12.28    國字隸書母稿
88.05.20    國字標準字體宋體母稿增補編</programlisting>
      <para>這兩個就是後來增加的 edustd-15.exe、edustds1.exe、edustds2.exe，
        也就是後來的第二版。</para>
      <programlisting>
92.02       教育部楷書字型檔</programlisting>
      <para>這個則是最近新增的檔案，品質比楷書母稿好很多，
        有 Big5 和 Unicode 版。當然有機會取代原 moe_kai.ttf，
	不過還需要比較字數等可能問題。</para>
      <para>總結：目前在 ports/chinese/moettf 中有五個檔案，方別是</para>
      <programlisting>
 2059101    edustd-15.exe   教育部隸書字型檔[註1]
 1971355    edustds1.exe    教育部標宋體增補編字形檔[註2]
  139950    edustds2.exe    教育部標宋體增補編字形檔[註2]
 9194491    moe_kai.ttf     國字標準字體楷書母稿[註3]
 8647174    moe_sung.ttf    國字標準字體宋體母稿[註3]

 [註1] http://www.edu.tw/mandr/allbook/lishu/lishu.htm
 [註2] http://www.edu.tw/mandr/result/5879/5879.html
 [註3] http://www.edu.tw/mandr/bbs/1-4-2/ksf.html</programlisting>
 
      <para>但是在教育部楷書字型檔[註4]，看到三個不同的楷書字型？</para>
      <programlisting>
13842688    kai-pc.ttf      PC 版(92.2)     Windows 系統適用
13837924    kai-linux.ttf   Linux 版(92.2)  Linux作業環境適用
 9300584    ct.sit          MAC 版(92.2)    APPLE電腦適用
 
 [註4] http://www.edu.tw/mandr/bbs/1-4-2/kai.htm</programlisting>
      <figure>
        <title>moettf snapshot</title>
        <mediaobject>
          <imageobject>
            <imagedata fileref="images/moettf" format="PNG">
          </imageobject>
        </mediaobject>
      </figure>
      <para>WWW: <ulink url="http://www.edu.tw/mandr/bbs/1-4-2/1-4-2.html">
        教育部國字標準字體公告</ulink></para>
      <para>
    </sect1>

    <sect1 id="arphicttf">
    <title>arphicttf - 文鼎科技 TrueType 字型</title>
      <para><application>arphicttf</application> 是由文鼎科技提供，
        包含文鼎PL細上海宋，文鼎 PL 中楷
        （BIG-5碼）和文鼎 PL 簡報宋、文鼎 PL 簡中楷（GB碼）。它可以用來
        作為 X Window 系統或是排版軟體，例如 
        <application>CJK</application>。感謝文鼎科技，您可以
        在 GPL-base 版權下自由散佈這些高品質的字型。
        <filename>ARPHIC_*.TXT</filename> 有更詳細的文件。</para>
      <note><para>盡量避免使用文鼎PL細上海宋於教育用途，
        該字型有許多字的字形會造成教育用途上的誤導，
	為了避免誤人子弟，盡可能的不要使用該字體。
	其中細上海宋的部份是採用對岸的慣用的繁體寫法，和台灣的寫法並不相同，
	最顯著的例子是『角』，中間的『土』中間是縱穿的，
	大家可以和 MS 的新細明比較便可知道。但中楷的部份則無此情形。
	因此，提醒大家，如果是用在學校、公務單位，或家裡有在學子弟在使用的話，
	建議盡量避免使用細上海宋，改採中楷，或另行購置台灣通用的字型。
	能保留中文繁體的正體寫法的國家，大概就只剩台灣了，
	請大家好好愛護我們的珍貴文化遺產。
	還有一些台灣繁體與大陸繁體的寫法差異，
	「骨」、「體」、「過」字等等，「┌」那兩劃被簡化成一劃，變成「┐」。
	草花頭：台灣標準寫法是 「十十」，大陸標準寫法是「廾」(四劃 --> 三劃)。
	「吳」字，大陸標準寫法是「口天」，「娛、誤」等字同例。
	「充」字，台灣五劃 (橫ㄙ)，香港和大陸六劃 (點橫ㄙ)。
	「這」字部首，台灣四劃 (點３捺），大陸三劃 (點７捺)。
	 「以」字，台灣五劃，大陸四劃 (最左邊的兩劃連筆)。</para></note>
      <para>安裝 <filename role="package">chinese/arphicttf</filename>。</para>
      <para>以下表格式整理過後的文鼎字體速查表，
        會有兩個 Font Family 是因為英文的是
	<option>Microsoft,Unicode,English - United States</option>
	的資訊，常用於 gtk2 等字型設定，
	中文的則是 <option>Microsoft,Unicode,Chinese - Taiwan</option>
	的資訊，通常是 utf8 編碼，常用於 openoffice 的字型設定，
	Font Family, Unique subfamily identification, Full name
	的資訊通常都會相同。</para>
      <table>
        <title>文鼎字體速查表</title>
	<tgroup cols="4">
	  <thead>
	    <row>
	      <entry>檔名</entry>
	      <entry>PostScript name</entry>
	      <entry>Font Family</entry>
	      <entry>Font Family</entry>
	    </row>
	  </thead>
	  <tbody>
	    <row>
	      <entry>bkai00mp</entry>
	      <entry>ZenKai-Medium</entry>
	      <entry>AR PL KaitiM Big5</entry>
	      <entry>文鼎ＰＬ中楷</entry>
	    </row>
	    <row>
	      <entry>bsmi00lp</entry>
	      <entry>ShanHeiSun-Light</entry>
	      <entry>AR PL Mingti2L Big5</entry>
	      <entry>文鼎ＰＬ細上海宋</entry>
	    </row>
	    <row>
	      <entry>gkai00mp</entry>
	      <entry>GBZenKai-Medium</entry>
	      <entry>AR PL KaitiM GB</entry>
	      <entry>文鼎ＰＬ簡中楷</entry>
	    </row>
	    <row>
	      <entry>gbsn00lp</entry>
	      <entry>BousungEG-Light-GB</entry>
	      <entry>AR PL SungtiL GB</entry>
	      <entry>文鼎ＰＬ簡報宋</entry>
	    </row>
	  </tbody>
	</tgroup>
     </table>	
      <figure>
        <title>arphicttf snapshot</title>
        <mediaobject>
          <imageobject>
            <imagedata fileref="images/arphicttf" format="PNG">
          </imageobject>
        </mediaobject>
      </figure>
      <para>WWW: <ulink url="http://www.arphic.com.tw/">文鼎科技</ulink></para>
    </sect1>

    <sect1 id="wangttf">
    <title>wangttf - 王漢宗教授 TrueType 字型</title>
      <para><application>wangttf</application> 由 
        Dr. Hann-Tzong Wang 提供的字型，可以看看 
        <filename>wangttf.txt</filename> 得到更詳細的資訊，
        不過安裝起來有 80MB，所以請斟酌後再使用。
	繼 文鼎科技 捐出四套字形之後，
	研發天蠶字庫的中原大學數學系王漢宗教授，
	也捐出十套字型，給 Linux 社群使用。版權採用 GPL 釋出。
	王漢宗教授捐出了以下十種字型：
	王漢宗新潮體--波浪、
	王漢宗特明體--標準、
	王漢宗波卡體--空陰、
	王漢宗綜藝體--雙空陰、
	王漢宗標楷體--空心、
	王漢宗仿宋體--標準、
	王漢宗粗鋼體--標準、
	王漢宗粗黑體--實陰、
	王漢宗粗圓體--雙空、
	王漢宗海報體--半天水。</para>
      <para>安裝 <filename role="package">chinese/wangttf</filename>。</para>
      <figure>
        <title>wangttf snapshot</title>
        <mediaobject>
          <imageobject>
            <imagedata fileref="images/wangttf" format="PNG">
          </imageobject>
        </mediaobject>
      </figure>
    </sect1>

    <sect1 id="ntuttf">
      <title>ntuttf - 台大字型</title>
      <para>Date: Thu, 17 Mar 94 14:18:18 CST</para>
      <para>From: Lin YawJen &lt;f1506015@csman.csie.ntu.edu.tw&gt;
      <para>HISTORY: I had written a program to convert fonts from 
      large bitmap into TrueTypefor MS-Windows.  For Mac, see 
      ifcss.org:/software/fonts/mac/ the bitmaps came
      from DYNAFONT (Hua2 Kang1) and ETen..</para>
      <para>This is the critical point of this product.</para>
      <para>Font styles includes:</para>
     <programlisting>
kai: 楷書
br: 粗圓 
fs_m: 仿宋常用 
li_m:隸書常用 
mb: 中黑 
mm:中明 
mr:中圓 
tw: 極細</programlisting>
      <para>COPYRIGHT: These fonts are created by  Mr. Lin Yaw-JenAll Right reserved.
        These fonts must not be used for any commercial activities.</para>
      <programlisting>
Lab of OA Network
Home: 4F, No. 12-2 Alley 2 Lane 250 Sec 5 Nanking East Rd.
Department of Computer Science and Information Engineering
Taipei Taiwan R.O.C    National Taiwan University
Tel: 886-2-7641236      Taipei Taiwan R.O.C
Fax: 886-2-760184   Email: f1506015@csman.csie.ntu.edu.tw</programlisting>
      <para>安裝 <filename role="package">chinese/ntuttf</filename>。</para>
      <figure>
        <title>ntuttf snapshot</title>
        <mediaobject>
          <imageobject>
            <imagedata fileref="images/ntuttf" format="PNG">
          </imageobject>
        </mediaobject>
      </figure>
      <para>
        WWW: <ulink url="ftp://cle.linux.org.tw/pub/fonts/ttf/source/ntu/ctlg.html">
        ntu ctlg</ulink></para> 
    </sect1>

    <sect1 id="oto">
    <title>oto - Open Type Organizer 程式</title>
      <para>Joe Man post 到 zh-l10n 的文章中節錄部分如下: </para>
      <para>Open Type Organizer(oto) 這個小小程式硬是要得！
	它可以將原本只有 big5 或 gb 編碼的 TrueType 字再加入一個 
	unicode 編碼，但絕對不會攪亂原本的字型。[big5 部份是由我修正的，
	請大家幫忙測試 :)] 這個方案還有一個好處... 因 OpenOffice 只認 
	Unicode 編碼的 TrueType 字，引至很多 Big5 編碼的字不能用。
	現在只要將轉變後的字抄到 OpenOffice 下的 share/fonts/truetype/ 
	就可以用了。好！ 我已經測試了幾個王漢宗教授的字型，
	(確係靚)！---廣東話 :) </para>
      <para>安裝 <filename role="package">chinese/oto</filename>。</para>
      <para>wangttf 的字型只有 Big5 編碼，所以我們幫她加上
	Unicode 編碼。</para>
      <screen>
&prompt.root; <userinput>oto wcl-01.ttf wcl-01-unicode.ttf</userinput>
&prompt.root; <userinput>ttfinfo wcl-01.ttf</userinput>
TTFINFO_FONT_FILE="wcl-01.ttf"
TTFINFO_FONT_NAME="unknown"
TTFINFO_FONT_PSNAME="unknown"
TTFINFO_FOUNDRY_NAME="misc"
TTFINFO_WEIGHT_NAME="medium"
TTFINFO_WIDTH="normal"
TTFINFO_NUMCMAP="1"
TTFINFO_CMAP0="3,4"
TTFINFO_CMAPNAME0="Windows,Big 5"
TTFINFO_MAPNUM="1"
TTFINFO_FONTMAP1="-misc-unknown-medium-r-normal--0-0-0-0-c-0-big5-0"
&prompt.root; <userinput>ttfinfo wcl-01-unicode.ttf</userinput>
TTFINFO_FONT_FILE="wcl-01-2.ttf"
TTFINFO_FONT_NAME="unknown"
TTFINFO_FONT_PSNAME="unknown"
TTFINFO_FOUNDRY_NAME="misc"
TTFINFO_WEIGHT_NAME="medium"
TTFINFO_WIDTH="normal"
TTFINFO_NUMCMAP="2"
TTFINFO_CMAP0="3,1"
TTFINFO_CMAPNAME0="Windows,Unicode"
TTFINFO_CMAP1="3,4"
TTFINFO_CMAPNAME1="Windows,Big 5"
TTFINFO_MAPNUM="1"
TTFINFO_FONTMAP1="-misc-unknown-medium-r-normal--0-0-0-0-c-0-big5-0"</screen>
      <para>oto 另外一個好用的功能就是能修改字型的屬性：</para>
      <screen>
&prompt.user; <userinput>oto NTU_KAI.TTF > test</userinput>
&prompt.user; <userinput>iconv -f utf-8 -t big5 test > test.big5</userinput>
&prompt.user; <userinput>vi test.big5</userinput>
&prompt.user; <userinput>iconv -f big5 -t utf-8 test.big5 > test.utf-8</userinput>
&prompt.user; <userinput>oto NTU_KAI.TTF ntu-kai-new.ttf --names test.utf-8</userinput></screen>
      <para>編輯 test.big5 把  
        <option>(Microsoft,Unicode,Chinese - Taiwan) .... at ...:</option>
        改成您想要顯示的字，使用 iconv 可能要注意並非整個檔都是 utf-8 編碼的，
	大概把 Unicode 那些區段自己找出來轉成 big5 編輯後再寫回去，
	最後再搭配 --names 來把屬性改掉。</para>
      <para>以下是 Edward G.J. Lee（李果正） 所貢獻的。</para>
      <para>Pfaedit 也是可以修改字型的屬性</para>
      <programlisting>
#!/usr/bin/env pfaedit
# Reencoding a font to Unicode TTF.
# By Edward G.J. Lee, this code is public domain.
# $1: your TTF name.

if ($argc != 2)
  Print("usage: ", $0, " your.tt[fc]")
  Quit(1)
endif

Print("Loading ", $1, "...")
Open($1)

SetFontNames("myfont","myfont","myfont")

Reencode("iso10646-1")

ClearHints()
Print("Generating fonts...")
Generate($1 + ".ttf")

Close()
Quit(0)</programlisting>
      <para>chmod +x unifont.pe 就可以執行了(Unix-like 系統/環境)。這個 script
	會把不是 Unicode 的 TTF 轉成 Unicode TTF。其中 ps name 的部份請自
	行更改，我這裡是使用 myfont。</para>
      <para>./unifont.pe your.ttf</para>
      <para>就可以了，會產生 your.ttf.ttf，再自行更改檔名。</para>
      <para>WWW: <ulink url="http://sourceforge.net/projects/oto">
	oto project</ulink></para>
    </sect1>

</chapter>

<!--
     Local Variables:
     mode: sgml
     sgml-declaration: "../chapter.decl"
     sgml-indent-data: t
     sgml-omittag: nil
     sgml-always-quote-attributes: t
     sgml-parent-document: ("../zh-tut.sgml" "part" "chapter")
     End:
-->
