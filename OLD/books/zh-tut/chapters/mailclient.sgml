<!--
     The Chinese FreeBSD Documentation Project
     $FreeBSD: doc/zh_TW.Big5/books/zh-tut/chapters/mailclient.sgml,v 1.2 2006/01/31 01:31:05 vanilla Exp $
     Original revision: 1.27
-->

<chapter id="mailclient">
  <title>中文郵件用戶端</title>
  <para></para>

  <sect1 id="sylpheed">
    <title>sylpheed - 建構在 GTK+ 上，輕量級且快速的電子郵件軟體</title>
      <para>
        GPL base client，base on <application>GTK+</application>。
        它是日本人寫的，已經支援 I18N 和 XIM。
        在顯示和輸入中文都沒問題，和 
        <application>xcin2.5</application> 也搭配良好。 </para>
      <para>安裝 <filename role="package">mail/sylpheed</filename>。</para>
      <para>
        安裝完後，必須修改字型設定，修改
        <filename>$HOME/.sylpheed/sylpheedrc</filename> 檔，
        將 message_font 改成下面的樣子。 </para>
      <programlisting>
message_font=8x16,kc15f,-*-16-*-big5-0</programlisting>
      <figure>
        <title>sylpheed snapshot</title>
        <mediaobject>
          <imageobject>
            <imagedata fileref="images/sylpheed" format="PNG">
          </imageobject>
        </mediaobject>
      </figure>
      <para>
        WWW: <ulink url="http://sylpheed.good-day.net/">
        http://sylpheed.good-day.net/</ulink> </para>
  </sect1>

  <sect1 id="mutt">
    <title>mutt - 功能強大的電子郵件軟體</title>
      <para>
        console 模式下的中文電子郵件軟體。
        <application>Mutt</application>
        -- "The Mongrel of Mail User Agents" 包含了很多其他
        如 <application>Elm</application>、
        <application>Pine</application>、
        <application>mh</application>、
        <application>slrn</application> 的特點，特性是包含顏色支援，
        訊息串流
        ，MIME 解碼 (包含 RFC1522 支援得標頭編碼)，個人化金鑰的保存
        ，POP3，支援 DSN 和 PGP/MIME。 </para>
      <para>安裝 <filename role="package">chinese/mutt</filename>。</para>
      <para>設定 <filename>.muttrc</filename></para>
      <programlisting>
set charset=big5
set locale="zh_TW.Big5"
set send_charset="big5:gb2312:us-ascii:iso-8859-1:utf-8:x-unknown"
charset-hook us-ascii big5                                        
charset-hook iso-8859-1 big5 </programlisting>
      <para>如果寄信給 bbs 的朋友，有亂碼問題的話</para>
      <programlisting>
echo "set bbsislame=yes" &gt;&gt; ~/.muttrc </programlisting>
      <para>mutt 1.3.x 讀 utf8 及簡體中文的信件都沒有問題。</para>
      <figure>
        <title>mutt snapshot</title>
        <mediaobject>
          <imageobject>
            <imagedata fileref="images/mutt" format="PNG">
          </imageobject>
        </mediaobject>
      </figure>
      <para>
        WWW: <ulink url="http://www.mutt.org/">
	http://www.mutt.org/</ulink> </para>
      <para>
        Mutt 使用者資訊：<ulink url="http://www.math.fu-berlin.de/~guckes/mutt/">
        http://www.math.fu-berlin.de/~guckes/mutt/</ulink>。
      </para>
  </sect1>

  <sect1 id="pine4">
    <title>pine4 - 操作便利的電子郵件軟體</title>
      <para>
        console 模式下的中文電子郵件軟體。
        大部份的訊息、選單都已經中文化了也可以正確無誤的處理中文信件，
        是個很方便的讀信軟體。
        <application>pine4</application> 的功能包含了支援 MINE
        、通訊錄，還支援 IMAP、mail 與 MH 格式的資料。 </para>
      <para>安裝 <filename role="package">chinese/pine4</filename>。</para>
      <para>
        若是顯示仍有問題的話，進入 <application>pine4</application>
        之後選 <option>SETUP/Config</option>
        在 <option>feature list</option> 中勾選(按 X)：
      </para>
      <programlisting>
   [X]  enable-8bit-esmtp-negotiation
   [X]  enable-8bit-nntp-posting </programlisting>
      <para>
        然後在 <option>character-set</option> 上按
        <command>C</command>，將其值
        改為 big5 或 gb2312。按 <command>E</command> 脫離儲存即可。 </para>
      <para>
        WWW: <ulink url="http://www.washington.edu/pine/">
        http://www.washington.edu/pine/</ulink> </para>
  </sect1>

  <sect1 id="mail-code">
    <title>郵件亂碼？</title>
      <para>由於歷史原因，Internet 上有些郵件系統只支援 7Bit 的字元傳輸，
        而漢字的內碼是 8Bit 的，當在電子郵件中發送中文時，
	如果經過這些只支援 7Bit 字元的郵件系統，
	便會將漢字內碼的第八位元的 1 全部變成 0。</para>
      <para>以 "中文" 兩字為例，HEX 為 A4A4A4E5，
	當最高位元被清掉時就會變成 24242465，也就是 "$$$e"。
	<application>telnet</application> 也存在這樣子的問題。</para>
      <para>除了中文郵件外，使用電子郵件傳送圖片、程式、
        壓縮文件等也會發生這個問題。
	所以在電子郵件中一般採用各種郵件編碼方式來解決這個問題，
	將 8Bit 按照一定的規則進行編碼，
	便可以完好地通過只支持 7Bit 字元的郵件系統。</para>
      <para>常見的郵件編碼有 UU 與 MIME，而 MIME
        (Multipurpose Internet Mail Extentions) 
	一般翻譯成「多媒體傳送模式」，
	顧名思義，它標榜的就是可以傳送多媒體型式的檔案，
	可以在一封mail中附加各種型式檔案一起送出。</para>
      <para>MIME 定義兩種編碼方法：Base64 與QP(Quote-Printable)，
        兩者使用時機不同，QP 的規則是對於資料中的7bits無須重複encode，
	僅8bits資料轉成7bits。QP編碼適用於非US-ASCII的文字內容，
	例如我們的中文檔案，而Base64的編碼規則，是將整個檔案重新編碼，
	編成7bits，它是用於傳送binary檔案時使用。
	由於編碼的方式不同，會影響編碼之後的檔案大小。
	有些較懶惰的軟體便都一律採用Base64編碼了。</para>
      <para>含有 MIME 編碼的文件，您查看它的源始碼，一般都含有：
        "This is a multi-part message in MIME format." 這樣的句子。</para>
      <para>以下我們以 <application>mmencode</application>
        (又稱為 <application>mimencode</application>) 作為 QP 與 BASE64 的範例，
        安裝 <filename role="package">converters/mmencode</filename>。</para>
      <para>RFC 2045 - Multipurpose Internet Mail Extensions (MIME)
        Part One: Format of Internet Message Bodies </para>
      <para>RFC 2046 - Multipurpose Internet Mail Extensions (MIME) 
        Part Two: Media Types</para>
      <para>RFC 2047 - MIME (Multipurpose Internet Mail Extensions) 
        Part Three: Message Header Extensions for Non-ASCII Text  
      <sect2 id="uu">
        <title>UU 編碼 (uuencode與uudecode)</title>
	  <para>
	    UU 是指 Unix 之間傳送二進制文件，就是 Unix to Unix。
	    使用 uuencode 將檔案編成7位元ASCII檔案，把它寄出，
	    收信人收到後，可以用 uudecode 將這份資料還原為原來的檔案。</para>
	  <para>
	    uuencode 的第一個參數是要加碼的檔案，也就是您信件的內容。
	    第二個參數是希望收信人解開後檔案叫什麼名字。</para>
	  <screen>
&prompt.user; <userinput>echo "中文" &gt; infile</userinput>
&prompt.user; <userinput>uuencode infile remotefile</userinput>
begin 644 remotefile
%I*2DY0KQ
`
end
&prompt.user; <userinput>uuencode infile remotefile | mail statue</userinput>
&prompt.user; <userinput>mail</userinput>
Mail version 8.1 6/6/93.  Type ? for help.
"/var/mail/statue": 1 message 1 new
&gt;N  1 statue                Fri Dec 21 13:12  16/390
&
Message 1:
From statue Fri Dec 21 13:12:19 2001
Date: Fri, 21 Dec 2001 13:12:19 +0800 (CST)
From: statue &lt;statuei&gt;
To: statue

begin 644 remotefile
%I*2DY0KQ
`
end
& <userinput>s mail1</userinput>
"mail1" [New file]
& <userinput>q</userinput>
&prompt.user; <userinput>uudecode mail1</userinput>
&prompt.user; <userinput>cat remotefile</userinput>
中文</screen>
      <sect2 id="qp">
        <title>QP - Quote-Printable</title>
	  <para>
	    Content-Transfer-Encoding: quoted-printable</para>
          <para>
	    QP編碼的方式，是將一個字元用二個16進位法的數值表示，
	    然後前面再加個「=」字元（等號）：</para>
          <screen>
&prompt.user; <userinput>echo "中文" | mmencode -q</userinput>
=A4=A4=A4=E5
&prompt.user; <userinput>echo "=A4=A4=A4=E5" | mmencode -q -u</userinput>
中文</screen>
          <para>或是用 perl 來將 QP 解碼：</para>
	  <programlisting>
while(defined($line = &lt;STDIN&gt;)) {
  $line =~ s/=([0-9A-Fa-f][0-9A-Fa-f])/chr hex $1/ge;
  $line =~ s/[\n\r]+$//;
  print STDOUT $line;
}</programlisting>
          <para>用 perl 來將文字編成 QP 碼：</para>
	  <programlisting>
while(defined($line = &lt;STDIN&gt;)) {
  $line =~ s/([=\x00-\x1F\x80-\xFF])/sprintf("=%02X",ord($1))/ge;
  print STDOUT $line;
}</programlisting>
      </sect2>
      <sect2 id="base64">
        <title>BASE64</title>
	  <para>
	    Content-Transfer-Encoding: BASE64</para>
	  <para>
	    BASE64 的算法很簡單，它將字符流順序放入一個 24 位的緩衝區，
	    缺字符的地方補零。然後將緩衝區截斷成 4 個部分，高位在先，
	    每個部分 6 位，用下面的64個字符重新表示：
	    "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"。
	    如果輸入只有一個或兩個字節，那麼輸出將用等號 "=" 補足。
	    還可以隔斷附加的信息造成編碼的混亂。這就是BASE64。</para>
          <screen>
&prompt.user; <userinput>echo "中文" | mmencode</userinput>
pKSk5Qo=
&prompt.user; <userinput>echo "pKSk5Qo=" | mmencode -u</userinput>
中文</screen>
      </sect2>
      <sect2>
      <title>其他亂碼？</title>
        <para>以 "中文" 兩字為例，整理一下以上的編碼會出現的狀況：</para>
	<programlisting>
uuencode：%I*2DY0KQ
QP：=A4=A4=A4=E5
BASE64：pKSk5Qo=</programlisting>
        <para>以及其他語言性的轉碼可能出現的狀況：</para>
	<programlisting>
GB2312：笢恅(iconv -t GB2312)
Unicode：U+4E2D U+6587
UCS-2：N-e(iconv -t UCS-2)
UTF-7：+Ti1lhw(iconv -t UTF-7)
UTF-8：銝剜??(iconv -t UTF-8) 
UTF-16：??N-e?(iconv -t UTF16)
UTF-32：??N-e?(iconv -t UTF32)
CNS11643：1-4463 1-4546
CCCII：213034 214258</programlisting>
       <para>另外一些有的沒的程式會出現的狀況：</para>
       <programlisting>
hexdump：0000000 a4a4 e5a4 000a                         
0000005(hexdump)</programlisting>
      </sect2>
  </sect1>

</chapter>

<!-- 
     Local Variables:
     mode: sgml
     sgml-declaration: "../chapter.decl"
     sgml-indent-data: t
     sgml-omittag: nil
     sgml-always-quote-attributes: t
     sgml-parent-document: ("../zh-tut.sgml" "part" "chapter")
     End:
-->
