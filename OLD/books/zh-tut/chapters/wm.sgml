<!--
     The Chinese FreeBSD Documentation Project
     $FreeBSD: doc/zh_TW.Big5/books/zh-tut/chapters/wm.sgml,v 1.2 2006/01/31 01:31:05 vanilla Exp $
     Original revision: 1.60
-->

<chapter id="wm">
  <title>中文視窗管理程式</title>
    <para></para>

  <sect1 id="gnome">
    <title>GNOME 程式的中文支援</title>
      <para><application>GNOME</application> 並不是一個軟體，而是由
        GNU Project的另一項軟體計劃，而它的目標就是創造出一個完整
        而友善的桌面環境。為了達成這個目標，在
        <application>GNOME</application> 收集的工具中，
        包含了發展工具，網路工具，數學工具，還有系統管理和桌面管理的
        工具，甚至連娛樂用軟體和多媒體處理的工具都包含在它的收集之列，
        讓您的 X Window 使用起來，簡直有如虎添翼一般。</para>
      <para>但 GNOME 的好處不僅僅如此而己，現在我們在 X Windows 底下，
        當您要開啟某個檔案，您只要在 <application>GNOME</application>
        的檔案總管按二下就可以檢視它了。這原本只能在 Mac OS 或
        MS Windows 看的到的能力，現在在 <application>GNOME
        </application> 之下，在 X Windows 下也能看到。</para>
      <para><application>GNOME</application> 程式是基於
        <application>GTK+</application> 這個函式庫開發出來的，
        <application>GTK+</application>
        的國際化一直做的不錯，所以在我們的環境底下，大部分的
        <application>GNOME</application>
        程式都可以正常使用中文了。 </para>
      <para>訊息翻譯也由 <ulink url="http://i18n.linux.org.tw">
        http://i18n.linux.org.tw</ulink> 正在進行著，
        有空請多多給他們鼓勵吧。 </para>
      <para>WWW: <ulink url="http://www.gnome.org/"> 
        http://www.gnome.org/</ulink> </para>
    <sect2 id="gtk2">
      <title>gtk2</title>
      <para>在 gnome2.2 之後採用 xft2 &amp; fontconfig 來設定字型，
        gtk2 的設定方式是用 <filename>~/.gtkrc-2.0</filename>，
        設定的格式與 <filename>~/.gtkrc</filename>相同，
	但是取用字型的寫法不ㄧ樣。</para>
      <programlisting>
style "gtk-default-zh-tw" {
	font_name = "Sans 16"
}
class "GtkWidget" style "gtk-default-zh-tw"</programlisting>
      <para>如果要更改預設字型大小直接修改 <filename>~/.gtkrc-2.0</filename>
        就可以了，而如果是要改顯示的字型則是可以選擇
	<filename>~/.gtkrc-2.0</filename> 
	或是 <filename>fonts.conf</filename>，
	而字型名稱可以從 <command>fc-list</command> 這個指令得到。</para>
      <note><para>中文字在小字的時候，某些字型使用 anti-alias 反而會變得模糊，
	gtk2 使用 Xft2，設定檔則是 
	<filename>/usr/local/etc/fonts/fonts.conf</filename>
	，以下的範例是關閉小於 13 點字型時的 anti-aliasing。</para>
	<programlisting>
        &lt;match target="pattern"&gt;
                &lt;test qual="any" name="size" compare="less"&gt;
                        &lt;int&gt;13&lt;/int&gt;               
                &lt;/test&gt; 
                &lt;edit name="antialias" mode="assign"&gt;
                        &lt;bool&gt;false&lt;/bool&gt;         
                &lt;/edit&gt;             
        &lt;/match&gt;
</programlisting></note>
      <para>另外 gtk2 不支援 OverTheSpot，只支援 Root 及 OnTheSpot，
        可以用 gconftool-2 更改設定。如果還是不行，在輸入區按下右鍵，
	選取輸入模組 <option>XIM</option>。</para>
    </sect2>
    <sect2 id="gtk1">
      <title>gtk1</title>
      <para>以下是 gtk1 的設定方式，設定檔的內容如下：
        (應該會在 <filename>
        /usr/local/share/themes/Default/gtk/gtkrc.zh_TW.Big5</filename> ) </para>
      <programlisting>
# $(gtkconfigdir)/gtkrc.zh_TW
#
# This file defines the fontsets for Chinese language (ch) using
# the traditional chinese Big5 encoding as used in Taiwan (TW)
#
# 1999, Pablo Saratxaga &lt;pablo mandrakesoft.com&gt;
#

# IMPORTANT NOTE: The name of this file *MUST* be "gtkrc.zh_TW.big5"
# the lowercasing of "big5" is done on purpose, if you change it it won't work

style "gtk-default-zh-tw" {
        fontset = "-adobe-helvetica-medium-r-normal--16-*-*-*-*-*-iso8859-1,\
                  -taipei-*-medium-r-normal--*-*-*-*-*-*-big5-0,\
                  -*-*-medium-r-normal--16-*-*-*-*-*-big5-0,*-r-*"
}
class "GtkWidget" style "gtk-default-zh-tw" </programlisting>
      <para>這個檔案裡面設定了 zh_TW.Big5 環境要用到的字型集，
	上面的設定表示在使用 zh_TW.Big5 環境的時候會需要用到兩種字體，
	一個是 iso8859-* 的字體，用來顯示英文字，一種是 big5-0 的字體，
	用來顯示 BIG5 中文。讀者可以把這個設定檔複製一份到 
        <filename>~/.gtkrc</filename>，更改裡面的設定，
	就可以在 <application>GNOME</application> 
        環境底下使用自己喜歡的字體了。 </para>
      <screen>&prompt.root; <userinput>cp /usr/local/share/themes/Default/gtk/gtkrc.zh_TW.Big5 ~/.gtkrc</userinput></screen>
<!--      <para>或是將 gtkrc.zh_TW.Big5 拷貝成 gtkrc.zh_TW.big5 也是可以的。</para>-->
      <para>這是筆者偷懶的 <filename>~/.gtkrc</filename> 範例</para>
      <programlisting>
style "default" {
 fontset = "8x16,kc15f,-*-16-*-big5-0"
}
widget_class "*" style "default"</programlisting>
      <note><para>如果是在 GNOME2 底下使用 gtk1 的程式，
        要改成修改 <filename>~/.gtkrc.mine</filename>。</para></note>
      <para>WWW: <ulink url="http://www.linpus.com.tw/manual/gnome/index.html">
        GNOME 中文使用手冊</ulink> </para>
    </sect2>
    
  <sect2 id="nautilus">
    <title>Nautilus 中文字變成 ???</title>
      <para>首先要設定好 <filename>~/.gtkrc</filename>，
	這樣子介面的部份就會是中文的，可是內容的部份還需要修正，
	開啟軟體後：</para>
      <programlisting>
偏好設定 -> 編輯偏好設定 -> 外觀 -> [取消] 使用平滑的圖像</programlisting>
      <figure>
        <title>nautilus snapshot</title>
        <mediaobject>
          <imageobject>
            <imagedata fileref="images/nautilus" format="PNG">
          </imageobject>
        </mediaobject>
      </figure>
      <para>Contributed by mingchi@bbs.sayya.org</para>
      <para>Q2: 要建立中文新檔或目錄時他用utf8來編碼，
        與以前的Big5的檔案系統不和，我該如何把他設成也是用
	Big5碼來建立新的檔案或資料夾？</para>
      <para>A2: glib與gtk2以後，對於檔案命名都是用utf8編碼，
        所以用Nautilus新增中文檔名都是用utf8編碼。解決方式為
	在自己home底下編輯 <filename>~/.gnomerc</filename>
	加入 <option>export G_BROKEN_FILENAMES=1</option>
	那他就用您預設的locale LANG 與 LC_ALL的變數作編碼囉。</para>
      <para>For more detail <ulink url="http://www.gtk.org/gtk-2.2.0-notes.html">
        GTK+-2.2 Specific Notes</ulink></para>
    </sect2>
  </sect1>

  <sect1 id="enlightenment">
    <title>Enlightenment 的中文化</title>
      <para>
        <application>Enlightenment</application> 的中文化雖然不是利用 po
        檔翻譯，不過中文選單只要經過如下的 patch 後就應該沒問題了，
        不過在 &a.vanilla; 的大力幫忙下，預設的 themes 已經都中文化好了，
        只是如果下載新的 themes ，就必須自行做 patch 的部分。 </para>
      <para>安裝 <filename role="package">x11-wm/enlightenment</filename>。</para>
      <para>選單的設定檔在
	<filename>/usr/local/share/enlightenment/config</filename>，
	如果想中文化選單可以自己試試看。</para>
      <para>要 <application>Enlightenment</application> 的中文化，
        只要 theme 裡面的字型設定正確就可以了。大部分下載的 theme
	都只有設定 iso8859-1 的字型，還要在後面加上 big5-0 的字型，
	E 的程式本體 "基本上" 不做任何字型設定，
	任何字型都是從 theme 裡面定義的。</para>
      <para>在 theme 的 __NORMAL 部分都是字型設定，
	但這些字型設定是散在各個設定檔裡面。
	所幸，textclasses.cfg 就是讓您覆蓋用的，現在的做法就是改成 fontset
	的樣子就可以用了。例如原本的字串是：</para>
      <programlisting>
__NORMAL "-*-helvetica-bold-r-normal-*-*-120-*-*-*-*-*-*"</programlisting>
      <para>要改成如下：</para>
      <programlisting>
__NORMAL "-*-helvetica-bold-r-normal-*-*-120-*-*-*-*-*-*,-*-bold-r-*-12-*"</programlisting>
      <para>只要記得前面是 -bold-r- 就改成 -*-bold-r-*-12-*，
        -medium-r- 就改成 -*-medium-r-*-12-*，
	這樣子出來的字型才會比較相近。</para>
      <para>上述的方法有一個特例，就是 E 有個特異功能。
        不用 Xtt server 就可以 show
	ttf 字型。而它的 __NORMAL 可以吃的字型有兩種。一種是 X 
	裡面設定好的字型。另一種是放在 theme 裡面的 *.ttf。
	([theme name]/ttfonts 裡面)</para>
      <para>
        E 目前還不能夠把 "跟著 theme 來的 ttf" 和 "X 環境的任何字型"
	混在一起寫成 fontset 的型式。</para>
      <para>WWW: <ulink url="http://www.enlightenment.org/">
        http://www.enlightenment.org/</ulink> </para>
  </sect1>

  <sect1 id="kde">
    <title>KDE 的中文化</title>
      <para><application>KDE</application>, The K Desktop Environment
        這套使用環境，包含了三個工作區域。位於螢幕下方的panel，
        是用來開啟應用程式以及切換不同的虛擬桌面的。它有一個類似
        MS-Windows 中的開始按鈕(Application Starter)，是一個大Ｋ
        的圖案，按下它就會顯示可以執行的應用程式。螢幕左上角的
        taskbar，是用來切換跟管理目前正在跑的應用程式的。而
        desktop 本身，可以用來放置檔案或是資料夾，
        <application>KDE</application> 提供數個虛擬桌面，按下在
        panel 的按鈕可以切換他們。 </para>
      <para><application>KDE</application> 有著很大的彈性，
        可以讓我們很容易地設定成習慣的使用方式，就拿 KDE Control
        Center 來說吧，我們可以調整有關於 Applications(桌面管理以及
        panel 的各項設定)、Desktop(背景圖、顏色、螢幕保護、字形和語言)、
        Information(記憶體和CPU的使用率)、Input Device(鍵盤和滑鼠)、
        Network(網路相關)、Sound(事件音效)以及Windows的各類模組(modules)
        的設定。 </para>
      <para><application>KDE</application> 在中文化的方面做的很不錯了，在
        <application>KDE</application> 中大部分的軟體都支援
        XIM ，一下子多了很多好用且可以輸入中文的軟體，
        而且畫面的美觀是這次改變的重點之一，巫師好像也成為
        <application>KDE</application> 象徵，
        真的建議有空試試看這一套軟體。
        訊息翻譯也由 <ulink url="http://i18n.linux.org.tw">
        http://i18n.linux.org.tw</ulink> 正在進行著，有空請多多給他們
        鼓勵吧。 </para>
    <para>KDE WWW: <ulink url="http://www.kde.org/">
      http://www.kde.org/</ulink></para>
    <para>這是 Taiwan <application>KDE</application> Users' Group
      <ulink url="http://kde.linux.org.tw/">http://kde.linux.org.tw/</ulink>。</para>

    <sect2 id="kde1">
      <title>KDE1 [OBSOLETE]</title>
      <para>Last Update: 2003年 1月19日 周日 08時18分25秒 CST</para>
      <para>這邊有個進入 <application>KDE</application> 會比較快的小秘訣。
        修改 <filename>~/.qti18nrc</filename>：</para>
      <programlisting>
Ariel   -*-ming-medium-r-normal--*-*-*-*-c-*-big5-0
Andale  -*-ming-medium-r-normal--*-*-*-*-c-*-big5-0
Georgia -*-ming-medium-r-normal--*-*-*-*-c-*-big5-0
Times   -*-ming-medium-r-normal--*-*-*-*-c-*-big5-0
Trebuc  -*-ming-medium-r-normal--*-*-*-*-c-*-big5-0
Verdana -*-ming-medium-r-normal--*-*-*-*-c-*-big5-0
Courier -*-ming-medium-r-normal--*-*-*-*-c-*-big5-0
Helvetica       -*-ming-medium-r-normal--*-*-*-*-c-*-big5-0
kai     -*-ming-medium-r-normal--*-*-*-*-c-*-big5-0
ming    -*-ming-medium-r-normal--*-*-*-*-c-*-big5-0
*       -*-ming-medium-r-normal--*-*-*-*-c-*-big5-0</programlisting>
    </sect2>

    <sect2 id="kde2">
      <title>KDE2 [OBSOLETE]</title>
      <para>Last Update: 2003年 1月19日 周日 08時18分25秒 CST</para>
      <para>安裝 <filename role="package">x11/kde2</filename>。</para>
      <note><para>記得安裝 <filename>chinese/arphicttf</filename>，
          要不然設定出來的字還都會是問號。</para> </note>
      <para>如果沒有辦法輸入中文的話，用命令列模式試試加上 
      <option>-im xcin</option>
	，例如 <command>kword -im xcin</command>。</para>
      <para>簡單的中文化設定：</para>
      <para>
        先開啟 <quote>控制中心(Control Center)</quote>，
	<quote>個人化(Personalization)</quote>，
        <quote>國家及語言(Country & Language)</quote>，
	設定成 <quote>台灣(tw)</quote>， 
	<quote>繁體中文(zh_TW.Big5)</quote>，<quote>big5-0</quote>。 </para>
      <para>
        經過這樣的設定之後，原則上，<application>KDE2</application> 
        就有完整的中文支援了。 </para>

      <para>筆者的 <application>KDE</application> + Anti-Alias 安裝過程：</para>

      <para>1. 安裝 x11/xorg，chinese/arphicttf，x11/kde2，
	chinese/kde2-i18n。</para>

      <para>2. 編輯 <filename>/etc/X11/xorg.conf</filename>，
	將 <option>load "freetype"</option> 註解，加入 
	<option>load "xtt"</option>，並在 FontPath 區段最前面加入
	<option>/usr/local/lib/X11/fonts/TrueType</option>。</para>

      <para>3. 編輯 <filename>~/.xftconfig</filename>，加入：</para>
	<programlisting>
dir "/usr/local/lib/X11/fonts/TrueType"
# Danny:
# set the AA for different fonts
#
# most TT fonts do not need to be aliased between
# 8 and 15 points, although this might be a matter of taste.
match 
      any size &gt; 8
      any size &lt; 15
edit
      antialias = false;</programlisting>
      <para>4. 編輯 <filename>~/.xinitrc</filename>，在
	<option>startkde</option> 前加入 
	<option>export QT_XFT=true</option>。</para>
      <para>5. 在 <option>控制中心(Control Center)</option> 改
	<option>外表 & 感覺(Look & Feel)</option> 中的 
	<option>字型(Fonts)</option>，將 
	<option>在字型與圖示上使用反鋸齒的平滑潤飾
	(Use Anti-Alising for fonts and icons)</option> 勾選
	；或是編輯 <filename>~/.kde/share/config/kdeglobals</filename> 
	在 <option>[KDE]</option> 區段，修改 <option>AntiAliasing=true
	</option>。</para>
      <para>6. 在 <option>控制中心(Control Center)</option> 的 
	<option>個人化(Personalization)</option> 的 <option>
	國家及語言(Country & Language)</option>
	設定成 <option>台灣(tw)</option>
	，<option>繁體中文(zh_TW.Big5)</option>，<option>big5-0</option>；
	或是編輯 <filename>~/.kde/share/config/kdeglobals</filename>
	在 <option>[Locale]</option> 區段，修改
	<option>Charset=big5-0</option>，<option>Country=tw</option>，
	<option>Language=zh_TW.Big5</option>。</para>
      <para>7. 重新進入 <application>KDE</application>。</para>
      <para>WWW: <ulink url="http://www.linuxdoc.org/HOWTO/mini/FDU/index.html">
	XFree86 Font De-uglification HOWTO</ulink></para>
      <para>KDE2 的替代字型(fontguess)：</para>
      <para>
        在 KDE2 中修改 <filename>~/.fontguess</filename>，使 qt lib
        在選擇替代字型時能正確無誤。</para>
      <programlisting>
[big5-0][gb2312.1980-0][ksc5601.1987-0]
helvetica       ming       ming       gulim
times           ming       ming       batang
courier         ming       ming       dotum 
utopia          ming       ming       gulim
clean           ming       ming       gulim
ming            helvetica  helvetica  helvetica
kai             helvetica  helvetica  helvetica </programlisting>
      <para>WWW: <ulink url="http://www.mizi.com/kde/doc/fontguess/">
	To support multibyte in KDE 2.0 applications.</ulink></para>
    </sect2>

    <sect2 id="kde3">
      <title>KDE3</title>
      <para>Contributed by EricCheng</para>
      <para>Last Update: 2003年 1月19日 周日 08時18分25秒 CST</para>
      <para>安裝 <filename role="package">x11/kde3</filename>。</para>
      <para>安裝區域化訊息 <filename role="package">x11/kde3-zh_TW</filename>。</para>

      <para>KDE3 的替代字型 (qtconfig)：</para>
      <para>用 qtconfig -> Fonts -> Font Substitution。
	選一個英文字型，例如 Times New Roman [Xft]... 
	Xft 代表是 Xft 的 render，
	如果與 /usr/local/lib/X11/XftConfig 
	或 ~/.xftconfig 沒有相左的話就會有 AA。</para>
      <para>接著 Select substitute Family 選 PMingliu [Xft]，Add。
	高興的話可以選擇 SimSun 或是 SimHei，
	再加選一個 Bitstream Cyberbit 做 fallback。
	SimSun 和 SimHei 的特性是只有半形字有做 hinting，
	全形字沒有。在很多情況下這樣反而比較好看，
	缺點是半形字是 Fixed width, 字距太大有點醜。
	這樣設好之後到 Konqueror 的 Appearance -> Font 地方把 
	Serif 字型調成剛剛設的 Times New Roman [Xft]，
	至於其他的 Sans Serif 可以調成 Verdana，效果很好，
	自然也要在 qtconfig 中設定 Font Substitution。
	Sans Serif 是沒有襯線的字型，
	我以為中文的 equivalent 是黑體一類的字型，
	所以可以加入 SimHei 當作中文的 Sans Serif 字型，
	Serif 的襯線字型就要用 PMingLiU 一類的字。</para>
      <para>這樣做的意思是說，當使用 Qt3 的程式被設定為使用 
	Times New Roman  [Xft] 來畫字的時候，
	一旦遇到了 Times New Roman 沒有 cover 到的字元時 
	(如中文字) 就會去找第一個 Substituion Font 來看看有沒有，
	如果沒有再往下找，一直到找到為止。
	所以可以對各種不同語系分別設定不同的 Substitution Font，
	來達到各取所長的效果。</para>
      <figure>
        <title>konq_3_1 snapshot</title>
        <mediaobject>
          <imageobject>
            <imagedata fileref="images/konq_3_1" format="PNG">
          </imageobject>
        </mediaobject>
      </figure>
      <para>注意標題列我是用 Verdana/SimHei，
        內文的字則是被設定為 Times New Roman/MingLiu。</para>
      <figure>
        <title>konq_3_2 snapshot</title>
        <mediaobject>
          <imageobject>
            <imagedata fileref="images/konq_3_2" format="PNG">
          </imageobject>
        </mediaobject>
      </figure>
      <para>Font Substitution: 用 PMingLiU 畫日文漢字，再用 Cyberbit 畫假名，
	英文仍是用 Times New Roman。
	但好像是因為 PMingLiU 的先天 coverage 不夠大，
        導致有些日本寫法的漢字沒有出來。設成其他的應該不錯。</para>
      <para>MS 的 Fonts 都花了很多心思在 Hinting 上面，
	所以小字的 AA 或 ~AA 顯示效果都很棒。
	用 Times New Roman 看英文文章 (有人統計過是最易閱讀的字體)
        很舒服啊！但如果是斜體還有大量鋸齒就看得很累了。</para>
      <figure>
        <title>konq_3_3 snapshot</title>
        <mediaobject>
          <imageobject>
            <imagedata fileref="images/konq_3_3" format="PNG">
          </imageobject>
        </mediaobject>
      </figure>
      <para>QT_XFT 是給 QT 2.x 用的，Qt3.x 這個選項就不再有用了。<para>
      <para>arphic 的字型有另一個問題是，有些字的寫法不是正確的 
        "正體中文" 寫法</para>
      <para>像是『角』的裡面是穿出來的。所以叫做文鼎細『上海』宋。
	SimSun 以及 SimHei 也是同樣的道理（大陸做的），
	像是錯誤的誤右邊是口天吳，但是其餘的字因為沒有不當的 hinting，
	所以整體還是很好看。</para>
      <para>小字的時候有 Anti-Aliasing 不如沒有 Anti-Aliasing 的問題，
        那應該是不當的 hinting 所致。像是 Verdana 一類小字的 AA 就非常好看啊。
	</para>
      <figure>
        <title>kfont_3_1 snapshot</title>
        <mediaobject>
          <imageobject>
            <imagedata fileref="images/kfont_3_1" format="PNG">
          </imageobject>
        </mediaobject>
      </figure>
      <para>Fixed 的 Font 我喜歡用 MSung Light TC， 
        因為不但是 Unicode 而且半形很好看。</para>
      <figure>
        <title>konq_3_4 snapshot</title>
        <mediaobject>
          <imageobject>
            <imagedata fileref="images/konq_3_4" format="PNG">
          </imageobject>
        </mediaobject>
      </figure>
      <para>另外，Keith Packard 的 FontConfig 也出來了，
        但還沒空研究怎麼用就是了。</para>
    </sect2>

  </sect1>

  <sect1 id="windowmaker">
    <title>WindowMaker 的中文化</title>
      <para><application>WindowMaker</application> 在中文化的方面做的很不錯了，
        目前已經有 I18N 的套件了，介面大部分已經中文化了。這都是仰賴
        I18N 的成果。 </para>
      <para>安裝 <filename role="package">x11-wm/windowmaker</filename>。</para>
      <para>中文標題列的問題可以檢查以下的設定，不過筆者在 0.65.1_1 版本時
	，完全不需要修改就已經可以在選單與標題看到中文：</para>
      <para>1. 檢查 <filename>~/GNUStep/Defaults/WMGLOBAL</filename> 檔，
	如果沒有就自己建立一個內容如下：</para>
      <programlisting>
{
	MultiByteText = YES;
}</programlisting>
      <para>2. 確認中文字型，編輯 <filename>~/GNUStep/Defaults/WindowMaker
	</filename>，修改以下選項：</para>
      <programlisting>
MultiByteText = YES;
WindowTitleFont = "-*-helvetica-bold-r-normal-*-12-*-*-*-*-*-*-*,
-*-ming-bold-r-normal--12-*-*-*-*-*-big5-0";
MenuTitleFont = "-*-helvetica-bold-r-normal-*-12-*-*-*-*-*-*-*,
-*-ming-bold-r-normal--12-*-*-*-*-*-big5-0";
IconTitleFont = "-*-helvetica-medium-r-normal-*-8-*-*-*-*-*-*-*,
-*-ming-medium-r-normal--8-*-*-*-*-*-big5-0";
ClipTitleFont = "-*-helvetica-medium-r-normal-*-10-*-*-*-*-*-*-*,
-*-ming-medium-r-normal--10-*-*-*-*-*-big5-0";</programlisting>
      <para>以上只是個例子，當然必須確認有無相對字型。</para>
      <para>重新啟動 WindowMaker，用 <command>rxvt -T "中文顯示" &</command> 
	測試一下。 </para> 
      <figure>
        <title>windowmaker snapshot</title>
        <mediaobject>
          <imageobject>
            <imagedata fileref="images/windowmaker" format="PNG">
          </imageobject>
        </mediaobject>
      </figure>
      <para>WWW: <ulink url="http://www.windowmaker.org/">
        http://www.windowmaker.org/</ulink> </para>
  </sect1>

  <sect1 id="sawfish">
    <title>Sawfish 的中文化</title>
      <para><application>Sawfish</application> 在中文化的方面做的很不錯了，
        目前已經有 I18N 的套件了，
        介面大部分已經中文化了。這都是仰賴 I18N 的成果。 </para>
      <para>安裝 <filename role="package">x11-wm/sawfish</filename>。</para>
      <para>WWW: <ulink url="http://sawmill.sourceforge.net/">
        http://sawmill.sourceforge.net/</ulink> </para>
  </sect1>

</chapter>

<!--
     Local Variables:
     mode: sgml
     sgml-declaration: "../chapter.decl"
     sgml-indent-data: t
     sgml-omittag: nil
     sgml-always-quote-attributes: t
     sgml-parent-document: ("../zh-tut.sgml" "part" "chapter")
     End:
-->
